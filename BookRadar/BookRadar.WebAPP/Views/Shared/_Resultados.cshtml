@model SearchViewModel
@using System

@{
    var start = Math.Max(1, Model.Page - 2);
    var end = Math.Min(Model.TotalPages, Model.Page + 2);

    if (Model.Page <= 3)
        end = Math.Min(Model.TotalPages, 5);

    if (Model.Page >= Model.TotalPages - 2)
        start = Math.Max(1, Model.TotalPages - 4);
}

<div class="card shadow-sm">
    <div class="card-header d-flex justify-content-between align-items-center">
        <span class="fw-bold">Resultados</span>
        <small class="text-muted">
            Página @Model.Page de @Model.TotalPages · Total: @Model.TotalItems
        </small>
    </div>

    <div class="card-body p-0">
        @if (Model.Items.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover table-sm align-middle mb-0">
                    <thead class="table-light">
                        <tr>
                            <th>Título</th>
                            <th style="width:100px;">Año</th>
                            <th>Editorial</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var libro in Model.Items)
                        {
                            <tr>
                                <td>@libro.Titulo</td>
                                <td>@(libro.AnioPublicacion?.ToString() ?? "—")</td>
                                <td>@(string.IsNullOrWhiteSpace(libro.Editorial) ? "—" : libro.Editorial)</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <nav class="border-top">
                <ul class="pagination justify-content-center flex-wrap my-2">
                    <li class="page-item @(Model.Page == 1 ? "disabled" : "")">
                        <a class="page-link page-btn" href="@Url.Action("Index", new { author = Model.Author, page = 1, pageSize = Model.PageSize })">Primero</a>
                    </li>
                    <li class="page-item @(Model.Page == 1 ? "disabled" : "")">
                        <a class="page-link page-btn" href="@Url.Action("Index", new { author = Model.Author, page = Model.Page - 1, pageSize = Model.PageSize })">&laquo;</a>
                    </li>

                    @if (start > 1)
                    {
                        <li class="page-item disabled"><span class="page-link">…</span></li>
                    }

                    @for (int i = start; i <= end; i++)
                    {
                        <li class="page-item @(i == Model.Page ? "active" : "")">
                            <a class="page-link page-btn" href="@Url.Action("Index", new { author = Model.Author, page = i, pageSize = Model.PageSize })">@i</a>
                        </li>
                    }

                    @if (end < Model.TotalPages)
                    {
                        <li class="page-item disabled"><span class="page-link">…</span></li>
                    }

                    <li class="page-item @(Model.Page == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link page-btn" href="@Url.Action("Index", new { author = Model.Author, page = Model.Page + 1, pageSize = Model.PageSize })">&raquo;</a>
                    </li>
                    <li class="page-item @(Model.Page == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link page-btn" href="@Url.Action("Index", new { author = Model.Author, page = Model.TotalPages, pageSize = Model.PageSize })">Último</a>
                    </li>
                </ul>
            </nav>
        }
        else
        {
            <div class="text-center text-muted py-4">
                No se encontraron resultados.
            </div>
        }
    </div>
</div>